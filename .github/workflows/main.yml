
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  push:
    branches:
      - master
    tags:
      - 'v[0-9]+.[0-9]+'
  pull_request:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  amd64-manylinux228-py311:
     runs-on: ubuntu-latest
     container:
      image: pagmo2/manylinux228_x86_64_with_deps:latest
      env: 
        PPNF_BUILD_TYPE: "Python311"
        TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
     steps:
       - uses: actions/checkout@v4
       - name: Build
         run: bash tools/gha_manylinux.sh
  amd64-manylinux228-py310:
     runs-on: ubuntu-latest
     container:
      image: pagmo2/manylinux228_x86_64_with_deps:latest
      env: 
        PPNF_BUILD_TYPE: "Python310"
        TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
     steps:
       - uses: actions/checkout@v4
       - name: Build
         run: bash tools/gha_manylinux.sh
  linux_release_py311:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: bash tools/gha_pygmo_plugins_nonfree_linux_py311.sh
  linux_release_py312:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: bash tools/gha_pygmo_plugins_nonfree_linux_py312.sh
  linux_release_py313:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: bash tools/gha_pygmo_plugins_nonfree_linux_py313.sh
  windows_2022_release:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
      - uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: ppnf_devel
          environment-file: ppnf_devel.yml
          auto-update-conda: true
          channels: conda-forge
          channel-priority: strict
          auto-activate-base: false
      - name: Build
        shell: pwsh
        run: |
          mkdir build
          cd build
          cmake ../ -G "Visual Studio 17 2022" -A x64 -DCMAKE_INSTALL_PREFIX=C:\Miniconda\envs\ppnf_devel\Library -DPPNF_BUILD_CPP=yes -DPPNF_BUILD_TESTS=yes -DBoost_NO_BOOST_CMAKE=ON
          cmake --build . -j4 --config Release --target install
          ctest -j4 -V -C Release --output-on-failure
          cd ..
          mkdir build_py
          cd build_py
          cmake ../ -G "Visual Studio 17 2022" -A x64 -DCMAKE_INSTALL_PREFIX=C:\Miniconda\envs\ppnf_devel\Library -DPPNF_BUILD_PYTHON=yes -DPPNF_BUILD_CPP=no -DPPNF_BUILD_TESTS=no -DBoost_NO_BOOST_CMAKE=ON
          cmake --build . -j4 --config Release --target install
          python -c "import pygmo_plugins_nonfree; import pygmo; pygmo_plugins_nonfree.test.run_test_suite(1); pygmo.mp_bfe.shutdown_pool()"

          